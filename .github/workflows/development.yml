# This is a basic workflow to help you get started with Actions

name: Check & deploy

env:
  VERCEL_ORG_ID: 0pVxKCNNmR0k7ccH7AtUU0XT
  VERCEL_PROJECT_ID: prj_ZlPjR3kxAR1cl2uxasUAfEkvFADu
  DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events for the master and develop branches
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  QA:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
      - name: Install dependencies
        run: npm ci
      - name: Install Blitz
        run: npm install -g blitz
      - name: Generate Prisma client
        run: blitz prisma generate
      - name: Run tests
        run: npm run test:coverage
  Deploy-Preview:
    needs: QA
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
      - name: Start DB Keep alive serverless function
        uses: fjogeleit/http-request-action@v1
        env:
          DEPLOY_URL: ${{VERCEL_URL}}
        with:
          #url: "https://$VERCEL_URL/api/dbKeepAlive"
          url: ${{VERCEL_URL}}
          method: 'GET'
